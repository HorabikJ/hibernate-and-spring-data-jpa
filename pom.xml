<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>guru.springframework</groupId>
    <artifactId>sdjpa-intro</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>sdjpa-intro</name>
    <description>Introduction to Spring Data JPA</description>
    <properties>
        <java.version>17</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- I am not using MySQL thus the below dependency is commented out. -->
        <!--        <dependency>-->
        <!--            <groupId>mysql</groupId>-->
        <!--            <artifactId>mysql-connector-java</artifactId>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!-- We are using this maven 'h2' profile as above general h2 dependency has test scope, so when we run aour 
        SpringApplication without any Spring profile there is an error as Spring does not see h2 dependency. What we want is 
        to run our SpringApplication in prod mode with h2 database without any spring profile, so we are creating this mvn 
        profile. Then we can run our SpringApplication with only 'default' spring profile and with 'h2' mvn profile, so h2 
        will be brought up then.
         -->
        <profile>
            <id>h2</id>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>4.27.0</version>
                <configuration>
                    <url>jdbc:postgresql://localhost:5432/bookdb</url>
                    <username>bookdb</username>
                    <password>password</password>
                    <outputChangeLogFile>changelog.xml</outputChangeLogFile>
                    <changeSetAuthor>JH</changeSetAuthor>
                    <changelogSchemaName>bookdb</changelogSchemaName>
                </configuration>
                <!--Plugins do not have dependencies included. That is why we need to include the postgresql 
                dependency in this plugin to give liquibase plugin a postgresql dependency so liquibase can 
                talk/connect to postgresql using drivers from this  dependency. Also, we set the 
                ${postgresql.version} so it will be inherited from the parent pom file for this 
                dependency. Somehow liquibase works without postgresql dependency so leaving postgresql dependency 
                commented out. To generate change log run liquibase goal: `liquibase:generateChangelog`.
                 
                Liquibase homepage: https://docs.liquibase.com/tools-integrations/home.html
                Useful liquibase link: https://docs.liquibase.com/tools-integrations/maven/home.html
                Maven Liquibase goals: https://docs.liquibase.com/tools-integrations/maven/commands/home.html
                Liquibase best practices: https://docs.liquibase.com/concepts/bestpractices.html-->
              
                <!--                <dependencies>-->
                <!--                    <dependency>-->
                <!--                        <groupId>org.postgresql</groupId>-->
                <!--                        <artifactId>postgresql</artifactId>-->
                <!--                        <version>${postgresql.version}</version>-->
                <!--                    </dependency>-->
                <!--                </dependencies>-->
            </plugin>
        </plugins>
    </build>

</project>
