# This properties are for running the app connected to the postgres db running locally.
# In order to start the Spring App with this setup, the app must be started with profile 'local', for example, with 
# maven flag `-DspringProfilesActive=local`.
# Username and password are derived from `postgres/run-postgres-container.sh` file.
# We are telling Spring to use `bookuser` db user for interaction with the db. To see what privileges this user have 
# see the file `src/main/scripts/mysqlusers.sql`.
spring.datasource.username=bookuser
spring.datasource.password=password
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/bookdb?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
# The below property tells Spring to always sun the `resources/schema-postgresql.sql` when the app starts/context 
# initializes. We use it in the MySQLIntegrationTest class which is run with `local` profile as we want to have 
# always a fresh db with fresh sequence.
spring.sql.init.mode=always
# Below property is `validate` as we do not want Hibernate to create tables based on our @Entity classes.
# We want Spring to create db tables by executing `resources/schema-postgresql.sql` file. By default, Spring looks 
# for this file and executes it to create db tables.
spring.jpa.hibernate.ddl-auto=validate
# As Liquibase is responsible for creating our bookdb database, we are telling Spring to use `bookadmin` for liquibase 
# operations. To see what privileges this user see the file `src/main/scripts/mysqlusers.sql`.
spring.liquibase.user=bookadmin
spring.liquibase.password=password
